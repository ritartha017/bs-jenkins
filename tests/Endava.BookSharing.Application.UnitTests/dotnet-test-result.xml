<testsuites>
  <testsuite name="Endava.BookSharing.Application.UnitTests.dll" tests="291" skipped="0" failures="1" errors="0" time="1.4699246999999995" timestamp="2022-10-14T19:56:56" hostname="EN412241" id="0" package="Endava.BookSharing.Application.UnitTests.dll">
    <properties />
    <testcase classname="Endava.BookSharing.Application.UnitTests.AuthorManagement.CreateAuthor.CreateAuthorCommandTests" name="Constructor_ShouldSetProperties(fullName: &quot;fullName23319517-9f76-4bc5-9fb1-2ac84c88bfea&quot;, addedById: &quot;addedById7ac48c68-054e-47d8-aad0-b31dba7aafc8&quot;)" time="0.0021816" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandTests" name="AddBookToWishlistCommand_WithValidRequest_ValuesHaveBeenAssignedToFields(bookId: &quot;bookId93f6c2bb-b03b-4777-8803-a192e1327345&quot;, currentUserId: &quot;currentUserId9ceb25ac-3a0d-416b-905d-3db857f6dc47&quot;)" time="0.0075846" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FeedbackManagement.RemoveFeedback.RemoveReviewCommandTests" name="Constructor_ShouldSetProperties(id: &quot;id1aec6cf0-fa59-48fd-8a61-5e5421c8815f&quot;)" time="0.0002238" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(bookId: &quot;bookIdc8853cf1-fc97-4c22-a3a4-21e3b06666d9&quot;, authenticatedUser: AuthenticatedUser { Id = &quot;id38d6e7bb-67eb-4f4c-b3cd-349cc5584d1e&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [User, Admin, SuperAdmin] })" time="0.0060078" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Rating_WithOutOfRangeRating_DoesntAllow(rating: -1)" time="0.0485762" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Rating_WithOutOfRangeRating_DoesntAllow(rating: 0)" time="0.0003208" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Rating_WithOutOfRangeRating_DoesntAllow(rating: 6)" time="0.0001531" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_BokId_NotEmptyBookId_AcceptsBecauseNotEmpty(bookId: &quot;someId123&quot;)" time="0.0008285" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithNotAllowedCharactersContent_DoesntAllow(content: &quot;()*&amp;^%$#@!~`&quot;)" time="0.0003244" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Password_PasswordWithSomeCharacters(password: &quot;bbb\nbbb&quot;)" time="0.0018960" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Password_PasswordWithSomeCharacters(password: &quot;password&quot;)" time="0.0000668" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithNotAllowedCharactersContent_DoesntAllow(content: &quot;128128314&quot;)" time="0.0002120" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Username_EmptyOrNullUsername_DoesntAllowEmpty(username: &quot;&quot;)" time="0.0002107" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Username_EmptyOrNullUsername_DoesntAllowEmpty(username: null)" time="0.0000396" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithNotAllowedCharactersContent_DoesntAllow(content: &quot;123dsfsdfdfsd&quot;)" time="0.0001541" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Password_PasswordNullOrEmpty_Rejects(password: &quot;&quot;)" time="0.0001343" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithNotAllowedCharactersContent_DoesntAllow(content: &quot;@#$dsfssdfsk&quot;)" time="0.0001461" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Password_PasswordNullOrEmpty_Rejects(password: null)" time="0.0000402" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignInValidatorTests" name="Validate_Username_UsernameAlexei_AcceptsBecauseNotEmpty(username: &quot;Alexei&quot;)" time="0.0001272" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithNotAllowedCharactersContent_DoesntAllow(content: &quot;ывфыывадывлаы&quot;)" time="0.0003078" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Rating_WithRatingInRangeFrom_1_To_5_Accepts(rating: 5)" time="0.0003029" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Rating_WithRatingInRangeFrom_1_To_5_Accepts(rating: 1)" time="0.0001594" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithOutOfRangeContent_DoesntAllow(content: &quot;tttttttttttttttttttttttttttttttttttttttttttttttttt&quot;...)" time="0.0005239" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithOutOfRangeContent_DoesntAllow(content: &quot;ttttttttt&quot;)" time="0.0001472" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithOutOfRangeContent_DoesntAllow(content: &quot;t&quot;)" time="0.0001118" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithOutOfRangeContent_DoesntAllow(content: &quot;  t     &quot;)" time="0.0001702" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithNotAllowedCharactersTitle_DoesntAllow(title: &quot;123dsfsdfdfsd&quot;)" time="0.0008640" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithNotAllowedCharactersTitle_DoesntAllow(title: &quot;ывфыывадывлаы&quot;)" time="0.0001655" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithNotAllowedCharactersTitle_DoesntAllow(title: &quot;@#$dsfssdfsk&quot;)" time="0.0001354" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithNotAllowedCharactersTitle_DoesntAllow(title: &quot;128128314&quot;)" time="0.0001455" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithNotAllowedCharactersTitle_DoesntAllow(title: &quot;()*&amp;^%$#@!~`&quot;)" time="0.0003334" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_BookId_EmptyOrNullBookId_DoesntAllowEmpty(bookId: null)" time="0.0004641" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_BookId_EmptyOrNullBookId_DoesntAllowEmpty(bookId: &quot;&quot;)" time="0.0001364" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_InRangeFrom_5_To_100_Title_Accepts(title: &quot;  MyTitle &quot;)" time="0.0011895" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_InRangeFrom_5_To_100_Title_Accepts(title: &quot;someTitle&quot;)" time="0.0004364" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithAllowedCharacters_Accepts(title: &quot;someTitle,!:?.'&quot;)" time="0.0002628" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithAllowedCharacters_Accepts(title: &quot;someTitle&quot;)" time="0.0001555" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithAllowedCharacters_Accepts(title: &quot;   someTitle.&quot;)" time="0.0001349" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithOutOfRangeTitle_DoesntAllow(title: &quot;t&quot;)" time="0.0005279" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithOutOfRangeTitle_DoesntAllow(title: &quot;  t     &quot;)" time="0.0002207" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithOutOfRangeTitle_DoesntAllow(title: &quot;tttttttttttttttttttttttttttttttttttttttttttttttttt&quot;...)" time="0.0001618" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_WithOutOfRangeTitle_DoesntAllow(title: &quot;     titl&quot;)" time="0.0001635" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithAllowedCharacters_Accepts(content: &quot;someContent,!:?.'&quot;)" time="0.0002844" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithAllowedCharacters_Accepts(content: &quot;   someContent.  &quot;)" time="0.0001895" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_WithAllowedCharacters_Accepts(content: &quot;someContent&quot;)" time="0.0001287" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_InRangeFrom_10_To_500_Content_Accepts(content: &quot;  conteeeeeeeeeent  &quot;)" time="0.0005291" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Content_InRangeFrom_10_To_500_Content_Accepts(content: &quot;my conteeeeeeeeeeeeeeeeeeent&quot;)" time="0.0003738" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_EmptyOrNullTitle_DoesntAllowEmpty(title: &quot;&quot;)" time="0.0002734" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_EmptyOrNullTitle_DoesntAllowEmpty(title: null)" time="0.0001346" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ReviewValidatorTest" name="Validate_Title_NotEmptyTitle_AcceptsBecauseNotEmpty(title: &quot;someTitle&quot;)" time="0.0002528" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_RatingShouldGiveFiveForMaxWhenNullAndThreeForMinWhenSpecified" time="0.0037925" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_PageShouldBeOneWhenRequestPageNotSpeficied" time="0.0001516" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_PageShouldBeWhatIsSpeficied" time="0.0001384" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_GenresShouldCountTwoWhenGivenStringOfTwoGenres" time="0.0002131" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_RatingShouldGiveFourForMaxWhenSpecifiedAndZeroForMinWhenNull" time="0.0001822" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_GenresShouldBeEmptyWhenGivenNull" time="0.0002285" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryTests" name="ListAvailableBooksQuery_Constructor_RatingShouldZeroAndFiveWhenBothNull" time="0.0001193" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenNotGivenBothAuthorIdAndAuthorName_Fails(authorId: null, authorFullName: null)" time="0.0166405" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidDayOrMonthOrYearValues_Fails(date: &quot;12.01.2050&quot;)" time="0.0005052" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidDayOrMonthOrYearValues_Fails(date: &quot;12.00.2013&quot;)" time="0.0002028" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidDayOrMonthOrYearValues_Fails(date: &quot;31.13.2013&quot;)" time="0.0001820" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenTotallyInvalidDataType_Fails(date: &quot;12.12.201222222&quot;)" time="0.0002732" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenTotallyInvalidDataType_Fails(date: &quot;testingissoborring&quot;)" time="0.0001699" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenTotallyInvalidDataType_Fails(date: &quot;abracadabra&quot;)" time="0.0001685" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(bookId: &quot;bookId73a0e896-5c43-44ba-adf6-45fe485118d4&quot;, userId: &quot;userId2ded9a3e-3486-4f40-9e3c-cec34a404b84&quot;, role: [User, Admin, SuperAdmin])" time="0.0012359" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenTotallyInvalidDataType_Fails(date: &quot;//@12.43/.2001&quot;)" time="0.0001762" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenTotallyInvalidDataType_Fails(date: &quot;12330000&quot;)" time="0.0001512" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidSeparators_Fails(date: &quot;12|12|2012&quot;)" time="0.0002859" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidSeparators_Fails(date: &quot;12-12-2012&quot;)" time="0.0001600" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidSeparators_Fails(date: &quot;12^12^2012&quot;)" time="0.0001616" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenInvalidSeparators_Fails(date: &quot;12.12.2012&quot;)" time="0.0001608" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAuthorIdAndAuthorName_Accepts(authorId: null, authorFullName: &quot;AuthorName&quot;)" time="0.0004012" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAuthorIdAndAuthorName_Accepts(authorId: &quot;123456789&quot;, authorFullName: &quot;AuthorName&quot;)" time="0.0001352" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAuthorIdAndAuthorName_Accepts(authorId: &quot;123456789&quot;, authorFullName: null)" time="0.0001466" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenInvalidLengthFullName_Fails(authorFullName: &quot;123456ddddddddddddddddddddddfffffffffffffffffffddv&quot;...)" time="0.0003917" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserVerifyResetPasswordHashCommandTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(request: UserVerifyResetPasswordHashRequest { Email = &quot;Email1c13af17-9b40-48c1-b284-96b0dbf56425&quot;, Hash = &quot;Hash6b45cfeb-963b-4d2b-9d8b-754a68bdc097&quot; })" time="0.0458420" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Profiles.MappingTests" name="ShouldMapGetAuthorsListVmToAuthor(entity: GetAuthorsListItemResponse { FullName = &quot;FullName870e89af-fb77-4c08-bf8f-1964d7dfbbf5&quot;, Id = &quot;Id13cd0706-951d-42e9-8e31-c5d83f2376e7&quot; })" time="0.0119269" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Profiles.MappingTests" name="ShouldMapAuthorToGetAuthorsListVm(entity: Author { AddedByUserId = &quot;AddedByUserId25142f88-bdfe-4a19-87c0-e96a51ba3c0a&quot;, FullName = &quot;FullName0726258e-544f-440f-b831-5b89fd2ba23a&quot;, Id = &quot;Id440e8b20-226f-4257-bba5-b2c4fee3c479&quot;, IsApproved = True })" time="0.0020014" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ListBooksByOwnerValidatorTests" name="Validate_Page_WithNotValidPage(ownerId: &quot;12345678&quot;, page: -1)" time="0.0028794" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ListBooksByOwnerValidatorTests" name="Validate_Page_WithNotValidPage(ownerId: &quot;12345678&quot;, page: 0)" time="0.0000677" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ListBooksByOwnerValidatorTests" name="Validate_Page_WithNotValidPage(ownerId: &quot;12345678&quot;, page: -100)" time="0.0000321" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.ListBooksByOwnerValidatorTests" name="Validate_Page_WithNotValidPage(ownerId: &quot;12345678&quot;, page: -9999)" time="0.0000303" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAValidDate_Accepts(date: &quot;12.12.2012&quot;)" time="0.0061468">
      <failure type="failure" message="Assert.DoesNotContain() Failure&#xD;&#xA;Found:    Invalid date, please try again with a valid date in the format of MM/DD/YYYY.&#xD;&#xA;In value: String[] [&quot;At least Author ID or Author FullName must be spec&quot;..., &quot;At least Author ID or Author FullName must be spec&quot;..., &quot;Invalid date, please try again with a valid date i&quot;..., &quot;At least one genreID must be specifed.&quot;, &quot;Language ID must be specifed.&quot;]">at Endava.BookSharing.Application.UnitTests.Shared.Extensions.ValidationResultExtensions.HasNotErrorMessage(ValidationResult result, String message) in C:\uni\BD\book-sharing-be-main\tests\Endava.BookSharing.Application.UnitTests\Shared\Extensions\ValidationResultExtensions.cs:line 32
   at Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests.CreateBookValidator_WhenGivenAValidDate_Accepts(String date) in C:\uni\BD\book-sharing-be-main\tests\Endava.BookSharing.Application.UnitTests\Models\Validators\CreateBookValidatorTests.cs:line 29</failure>
    </testcase>
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAValidDate_Accepts(date: &quot;01/05/2022&quot;)" time="0.0002293" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenAValidDate_Accepts(date: &quot;01/01/2001&quot;)" time="0.0001172" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenValidLengthFullName_Accepts(authorFullName: &quot;Ted Ted&quot;)" time="0.0002227" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_WhenGivenValidLengthFullName_Accepts(authorFullName: &quot;Ted Kachinsky&quot;)" time="0.0001127" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_OnEmptyGenreIds_Fails(genreIds: null)" time="0.0002307" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_GivenValidLanguageId_Accepts(languageId: &quot;a55791df-bee2-4266-9009-b6745be7ae81&quot;)" time="0.0002378" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests" name="CreateBookValidator_NotGivenLanguageId_Fails(languageId: null)" time="0.0001781" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.GetReviews.GetReviewQueryTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(bookId: &quot;bookId0399b8a9-4626-45e6-9872-7f3b80a1a59b&quot;, page: 173)" time="0.0002553" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.CreateFile.CreateFileCommandHandlerTests" name="CreateFile_Handle_ThrowsBookSharingGenericExceptionWhenContentTypeIsNull(fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:7ae5&gt;)" time="0.0813173" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.PasswordReset.ResetPasswordCommandHandlerTests" name="Handle_ShouldCallCreatePasswordResetToken(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:5567&gt;, email: &quot;email62810962-b137-437e-8507-46b0c0f3e976&quot;, sut: ResetPasswordCommandHandler { })" time="0.0272706" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.CreateFile.CreateFileCommandHandlerTests" name="CreateFile_Handle_ReturnsCoverId(fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:8bb9&gt;)" time="0.0236927" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.DeleteBookFromWishlist.DeleteBookFromWishlistCommandHandlerTests" name="Handle_WhenNoSuchBookIdInWishlist_ThrowsBookSharingNotFoundException(wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:3d1b&gt;, command: DeleteBookFromWishlistCommand { BookId = BookId753f63fd-4513-45db-b0e2-f9d897acf7e2, UserId = UserId3b52a290-b5ae-40aa-b9e1-2852985f273c })" time="0.1059881" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.PasswordReset.ResetPasswordCommandHandlerTests" name="Handle_ShouldReturnCreatedPasswordResetToken(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:c569&gt;, email: &quot;emaile7055da2-8ff6-41d2-a6b9-65fed1e73430&quot;, token: &quot;tokenc6363ffc-61a7-4bb6-a221-a17d07929d40&quot;, sut: ResetPasswordCommandHandler { })" time="0.0017065" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.CreateFile.CreateFileCommandHandlerTests" name="CreateFile_Handle_ThrowsBookSharingGenericExceptionWhenCreationFails(fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:e53f&gt;)" time="0.0015167" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.CreateFile.CreateFileCommandHandlerTests" name="CreateFile_Handle_ThrowsBookSharingGenericExceptionWhenContentTypeAndRawIsNull(fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:1965&gt;)" time="0.0007570" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.CreateFile.CreateFileCommandHandlerTests" name="CreateFile_Handle_ThrowsBookSharingGenericExceptionWhenRawIsNull(fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:127e&gt;)" time="0.0007336" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.BookCover.GetBookCoverCommandHandlerTests" name="Handler_WhenFileIsNull_ShouldReturnNull(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:a994&gt;, fileRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:c1be&gt;, command: GetBookCoverQuery { BookId = &quot;bookId4e99e30f-ac52-4eb0-bf47-99cf8fd38efb&quot; }, handler: GetBookCoverQueryHandler { })" time="0.0038036" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.AssignRole.AssignRoleCommandHandlerTests" name="Handle_WithNotValidId_ShouldThrow(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:4d1b&gt;, id: &quot;id34a8509e-ec5f-47ec-a9c1-26c8dd74a920&quot;, role: User, sut: AssignRoleCommandHandler { })" time="0.0072777" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.BookCover.GetBookCoverCommandHandlerTests" name="Handler_ShouldGetBookCoverImage(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:07f8&gt;, fileRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:d804&gt;, command: GetBookCoverQuery { BookId = &quot;bookIda7cc3d97-546e-48f6-8d09-6ba99cd37872&quot; }, handler: GetBookCoverQueryHandler { })" time="0.0028331" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_ValidJpeg_ShouldReturnTrue(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:5782&gt;, sut: MagicBytesImageValidator { })" time="0.1147471" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.DeleteBookFromWishlist.DeleteBookFromWishlistCommandHandlerTests" name="Handle_BookARemovedFromWishlist_ShouldNotThrowAsync(wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:5bd1&gt;, command: DeleteBookFromWishlistCommand { BookId = BookId935a7755-e26b-496c-b50b-0a9710098f71, UserId = UserIdce735d12-54b8-4b88-b005-61eeb9a91af3 })" time="0.0083448" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_ValidJpg_ShouldReturnTrue(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:1aca&gt;, sut: MagicBytesImageValidator { })" time="0.0006175" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignInUser.CheckCredentialsQueryHandlerTests" name="Handle_WithValidQuery_CallsMethodValidateUserCredentials(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:4da3&gt;, sut: CheckCredentialsQueryHandler { }, query: CheckCredentialsQuery { Password = &quot;Passwordd9422d4d-ddf6-47e0-b144-98e1ef306fb6&quot;, UserName = &quot;UserNameae9e4a3f-f293-465e-bd05-7d2b44cab5de&quot; })" time="0.0022826" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.BookCover.GetBookCoverCommandHandlerTests" name="Handler_WhenGivenInvalidBookId_ThrowsBookSharingNotFoundException(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:573c&gt;, fileRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:c76c&gt;)" time="0.0016680" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_InvalidImage_ShouldReturnFalse(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:7ad0&gt;, sut: MagicBytesImageValidator { })" time="0.0005573" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.DeleteBookFromWishlist.DeleteBookFromWishlistCommandTests" name="AddBookToWishlistCommand_WithValidRequest_ValuesHaveBeenAssignedToFields(bookId: &quot;bookIda95d8feb-56fc-407b-b7c7-b7fdd2d39ab5&quot;, currentUserId: &quot;currentUserId57887d79-0b6c-44ef-a2a1-3b1ff577965b&quot;)" time="0.0002269" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.BookCover.GetBookCoverCommandTests" name="Constructor_ShouldSetProperty(bookId: &quot;bookId411c5ed5-5e29-4f41-9e3d-a3441f58719d&quot;)" time="0.0001345" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.AssignRole.AssignRoleCommandTests" name="Constructor_ShouldSetProperties(id: &quot;idb1605852-c79e-42bd-81d2-7c3844391bfa&quot;, role: User)" time="0.0001363" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_ValidJfif_ShouldReturnTrue(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:bac1&gt;, sut: MagicBytesImageValidator { })" time="0.0005264" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.AssignRole.AssignRoleCommandHandlerTests" name="Handle_ShouldReturnUnit(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:4ec3&gt;, id: &quot;id56e7fb52-787f-45f6-b765-0f423399c13c&quot;, role: User, sut: AssignRoleCommandHandler { })" time="0.0027396" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.AssignRoleValidatorTests" name="Validate_Id_EmptyOrNullId_DoesntAllowEmpty(id: &quot;&quot;, role: Admin)" time="0.0085828" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.AssignRoleValidatorTests" name="Validate_Id_EmptyOrNullId_DoesntAllowEmpty(id: null, role: Admin)" time="0.0001402" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_ValidBmp_ShouldReturnTrue(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:8736&gt;, sut: MagicBytesImageValidator { })" time="0.0005373" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.MagicBytesImageValidatorTests" name="IsValidImage_ValidPng_ShouldReturnTrue(file: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:3b9a&gt;, sut: MagicBytesImageValidator { })" time="0.0005442" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.DeleteBookFromWishlist.DeleteBookFromWishlistCommandHandlerTests" name="Handle_WhenDeleteBookIdForUserIdFails_ThrowsBookSharingGenericException(wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:18d3&gt;, command: DeleteBookFromWishlistCommand { BookId = BookId54715f00-ad98-413f-84af-89b70a948b54, UserId = UserIdcdc53458-3584-4cfd-9893-55a2b6ee8859 })" time="0.0039753" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignUpUser.UserSignUpCommandTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(userSignUpRequest: UserSignUpRequest { Email = &quot;Emailb656a5b9-355d-4cf8-bcbc-f842217a7b40&quot;, FirstName = &quot;FirstName52cea207-c0bc-4fd4-ae90-ab142c77099d&quot;, LastName = &quot;LastNameee1b2e1e-f1ae-4c8b-ae7e-20afe15fd072&quot;, Password = &quot;Password0ec6b70d-2bcf-457e-be86-9d161259c2b2&quot;, Username = &quot;Usernamea4d27813-3454-4f94-81f9-0389d99fd239&quot; })" time="0.0014390" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Exceptions.BookSharingInvalidCredentialsExceptionTests" name="Constructor_ShouldSetDefaultMessage" time="0.0001836" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_AuthorDeleteCover_ReturnsTrue(command: DeleteFileCommand { BookId = &quot;bookId5d935a2d-487f-467a-9ff7-b109eca54ed1&quot;, UserId = &quot;UserId33d7e8a2-9380-41e3-980a-1a63f621d87c&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:1523&gt;, sut: DeleteFileCommandHandler { }, book: Book { AuthorId = &quot;AuthorId709c0e32-b223-4085-bcd4-2341df964018&quot;, CoverId = &quot;CoverId6ce6a51c-a497-4160-99db-5b5f493138e5&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id0f664222-e1f2-4f07-8bfb-5fbe6624338e&quot;, IsDraft = True, ... })" time="0.0063026" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.AssignRole.AssignRoleCommandHandlerTests" name="Handle_WithNotRole_ShouldThrow(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:6f30&gt;, id: &quot;id60336cfa-f958-417e-9327-20975da2fa96&quot;, role: User, sut: AssignRoleCommandHandler { })" time="0.0058778" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.UserRolesDtoTest" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(userId: &quot;userId29d93eaf-ce80-4b81-9165-f8d7a6434a25&quot;, userRoles: [&quot;c4e59943-6055-4a47-8c8e-c40ce93650df&quot;, &quot;b1d57002-b3a5-4335-aaef-8931d772776e&quot;, &quot;194a74ca-e60f-4600-8b29-1221f9b929e5&quot;])" time="0.0053115" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserResetPasswordCommandHandlerTests" name="Hadle_PasswordReset_ReturnsTrue(command: UserResetPasswordCommand { Email = &quot;Email907adc76-3c64-4fe2-9bac-2ef77942b042&quot;, Hash = &quot;Hashfc9ff66e-276b-43d7-b732-f10d1a4ac1c5&quot;, Password = &quot;Passwordee102ffa-f1d4-4225-8fa5-49e78188b9de&quot; }, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:a17b&gt;, handler: UserResetPasswordCommandHandler { })" time="0.0035010" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.GenresManagement.GetGenresList.GetGenresListQueryHandlerTests" name="Handle_ShouldCallListAllAsync(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:a696&gt;, sut: GetGenresListQueryHandler { }, genres: [Genre { Id = &quot;Id7d91fd6e-354a-41ab-933c-f362af843f0a&quot;, Name = &quot;Name07db3d3f-cbfa-4202-8fe2-5d87f08d4681&quot; }, Genre { Id = &quot;Idcacc087e-323e-48a9-8aed-414d10e0960d&quot;, Name = &quot;Namee2688450-beb2-4797-b921-4cabf88e8209&quot; }, Genre { Id = &quot;Id36380a11-d5ed-4a7a-b63d-d8cc9217e39b&quot;, Name = &quot;Nameb809e0c6-5682-41c2-befe-68d60e4e910f&quot; }])" time="0.0027651" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_AdminDeleteCover_ReturnsTrue(command: DeleteFileCommand { BookId = &quot;bookId99989db5-141b-4593-8bf7-decd83af5d20&quot;, UserId = &quot;UserId01addaa8-9bec-4644-b98f-fbe3700966a6&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:1a4b&gt;, sut: DeleteFileCommandHandler { }, book: Book { AuthorId = &quot;AuthorId21cfd5d3-bc82-404d-abdb-b1a808a3f0b0&quot;, CoverId = &quot;CoverId1d3996b6-9335-4f16-a589-9f24245ba554&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id1eeb6cf5-0dda-4ace-abf9-3d4122d214c6&quot;, IsDraft = True, ... })" time="0.0034678" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserResetPasswordCommandHandlerTests" name="Hadle_PasswordResetReturnFalse_ShouldThowException(command: UserResetPasswordCommand { Email = &quot;Emailecd974d5-84fe-411a-adff-f95b54d3a93a&quot;, Hash = &quot;Hash9be94487-3b16-4e43-9fcc-ad4fe5650615&quot;, Password = &quot;Passwordcb4b3b40-89c9-4495-87a5-0909717e8e5d&quot; }, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:e7e7&gt;, handler: UserResetPasswordCommandHandler { })" time="0.0024673" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.AssignRole.AssignRoleCommandHandlerTests" name="Handle_ShouldCallMethodsWithValidParameters(identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:07fe&gt;, id: &quot;id7f244c5b-0c84-4546-b017-0d7ef3549bfd&quot;, role: User, sut: AssignRoleCommandHandler { })" time="0.0041125" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Exceptions.BookSharingGenericExceptionTests" name="Constructor_ShouldSetMessage(message: &quot;message91bb95fa-5767-4081-9f05-9c2f4349e6d2&quot;)" time="0.0001253" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.GetReviews.GetReviewQueryHandlerTests" name="Handle_WhenGivenAllValidData_NotThrowAsync(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:db99&gt;, reviewRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:3abd&gt;, query: GetReviewsQuery { BookId = &quot;bookIdf93cab9c-1ab0-45ab-8331-61fe90cb0b3b&quot;, Page = 225 }, handler: GetReviewsQueryHandler { })" time="0.0075589" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.GenresManagement.GetGenresList.GetGenresListQueryHandlerTests" name="Handle_ShouldReturnLanguagesList(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:510a&gt;, sut: GetGenresListQueryHandler { }, genres: [Genre { Id = &quot;Id961bd8c1-33a0-4ae9-b94a-62de021d9afe&quot;, Name = &quot;Name4fb4b5ed-41a2-49f9-a906-34a9e6a089c8&quot; }, Genre { Id = &quot;Idbc3fce2b-2d5e-4421-8cfd-22d6e3cb2503&quot;, Name = &quot;Nameb07954fc-eaba-41d0-9bb0-a37c34a71f8d&quot; }, Genre { Id = &quot;Id09d0c97c-a85b-46e5-b23e-c000fc735753&quot;, Name = &quot;Name1b6fcb5d-ad70-4002-ae44-7a5a9c28ef97&quot; }])" time="0.0014533" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandHandlerTests" name="Handle_BookNotAddedToWishlist_ThrowsBookSharingGenericException(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:9e54&gt;, wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:3be0&gt;, command: AddBookToWishlistCommand { BookId = BookId680b7604-2032-4dff-a995-bb2c45b3f774, UserId = UserId99f83130-e6bb-4974-af0e-c08e1c938a29 }, book: Book { AuthorId = &quot;AuthorId13a8b27f-d446-4716-ba6b-3ab04b4bf239&quot;, CoverId = &quot;CoverId9a7434ff-cf49-4d34-9867-96633eabe678&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id20355475-6349-4909-97db-34feb0329670&quot;, IsDraft = True, ... })" time="0.0056074" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignInUser.CheckCredentialsQueryTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(userSignInRequest: UserSignInRequest { Password = &quot;Password8d3c46d6-ffaa-42dc-8683-956218537f51&quot;, UserName = &quot;UserName7ae4f529-33ed-49ae-ad83-a04925c68330&quot; })" time="0.0008594" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_DeleteCover_ThrowsException_CouldNotBeDeleted(command: DeleteFileCommand { BookId = &quot;bookIdee1c4f24-dc6c-4383-a0e6-27bd3827616f&quot;, UserId = &quot;UserId6bf7d955-784e-45c1-9d72-f7738693fd95&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:52e6&gt;, sut: DeleteFileCommandHandler { }, book: Book { AuthorId = &quot;AuthorId74e7c3df-03e2-4213-9af0-a2f789ded63e&quot;, CoverId = &quot;CoverId0474ca41-fda0-43e5-9f34-ad50f2848509&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Idd2a9d019-da73-424c-89e5-3c0ecfe3e509&quot;, IsDraft = True, ... })" time="0.0021530" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.GetReviews.GetReviewQueryHandlerTests" name="Handler_WhenGivenInvalidBookId_ThrowsBookSharingNotFoundException(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:a903&gt;, reviewRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:9083&gt;)" time="0.0023313" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandHandlerTests" name="Handle_WhenGivenInvalidBookId_ThrowsBookSharingNotFoundException(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:7acc&gt;, wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:0780&gt;, command: AddBookToWishlistCommand { BookId = BookId7715ccdf-fe4c-424b-ad7b-c5c60c599f7e, UserId = UserId19d2a8d5-7a92-4874-a3b0-f682d2b103f3 })" time="0.0018074" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_DeleteCover_BookDoesNotExist_ThrowsException(command: DeleteFileCommand { BookId = &quot;bookIdf1e2e2cc-a9c3-4f31-ae62-6c469c23d643&quot;, UserId = &quot;UserId067140f4-2a65-4647-be13-29b5356503ac&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:b8df&gt;, sut: DeleteFileCommandHandler { })" time="0.0013560" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.CreateReview.CreateReviewCommandTest" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(createReviewRequest: CreateReviewRequest { BookId = &quot;BookId11d18cc0-d99c-4e31-a478-e1e20c982d54&quot;, Content = &quot;Contentfa642f56-1d64-4ea2-b7d1-07d152fb91fd&quot;, Rating = 111, Title = &quot;Title35eca4f8-7934-4038-9a50-b084f9c3bbb9&quot; }, userId: &quot;userId651e5125-5e9a-4b11-9872-6169f98cc45d&quot;)" time="0.0014880" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ReturnsUnitWithValidDataWhenUserAdminOrSuperAdmin(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:ae7a&gt;)" time="0.0036906" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.CreateBook.CreateBookCommandTests" name="CreateBook_WithValidRequest_ValuesHaveBeenAssignedToFields(request: CreateBookRequest { AuthorFullName = &quot;AuthorFullName12ab318b-ded3-4b52-95d7-725ac253e92a&quot;, AuthorId = &quot;AuthorId3f757410-fb01-49e0-a7b7-19e6c2253e19&quot;, File = Mock&lt;Microsoft.AspNetCore.Http.IFormFile:cae3&gt;.Object, GenreIds = [&quot;1801ee1c-d731-49b5-878d-50701812c4c2&quot;, &quot;8599276b-9ce0-4c90-9d76-b46320265f46&quot;, &quot;2030c6ef-225a-4276-bb66-d2ddc43363d7&quot;], LanguageId = &quot;LanguageId526ba825-310e-4f03-8f6a-c4e5974391a1&quot;, ... }, currenUserId: &quot;currenUserId812f80a3-d186-44fc-85fe-ef51ff7a5215&quot;, image: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:f53f&gt;.Object)" time="0.0027134" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandHandlerTests" name="Handle_WhenBookIsInDraft_ThrowsBookSharingValidationException(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:edc8&gt;, wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:5abc&gt;, command: AddBookToWishlistCommand { BookId = BookId4974dffd-b353-4b40-a593-b46a745d59fd, UserId = UserId075ece38-5b03-4c96-9658-1c60aea67267 }, book: Book { AuthorId = &quot;AuthorIda4fa091e-f7c9-4384-b1f5-2f0283bad02c&quot;, CoverId = &quot;CoverId723ded97-2271-4634-8452-8d31aa8c954a&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id30ff21d6-15a6-4cf9-8b00-31a579cbab20&quot;, IsDraft = True, ... })" time="0.0019451" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_UserIsBookOwner_NoBookCover_DeleteCoverAsync_ShoudlNotBeCalled(command: DeleteFileCommand { BookId = &quot;bookId85f814ad-3c4b-4b60-a3bd-79904a2662b3&quot;, UserId = &quot;UserId8a7c1c2b-98e7-4ff3-9506-3bbff7ea7df8&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:f583&gt;, sut: DeleteFileCommandHandler { }, book: Book { AuthorId = &quot;AuthorId7f669b3a-8a5d-4307-966e-06b35dc1d96f&quot;, CoverId = &quot;CoverId39bc5976-a4dc-4c2f-8b4a-55e9996c24c7&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id8aa27a1b-b336-42b3-b49b-8658f30cfc27&quot;, IsDraft = True, ... })" time="0.0017718" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FeedbackManagement.RemoveFeedback.RemoveReviewCommandHandlerTests" name="Handle_WithNotValidId_ShouldThrowNotFound(reviewRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:78d5&gt;, sut: RemoveReviewCommandHandler { }, feedbackId: &quot;feedbackId0827cdee-28e7-414f-895e-0718b6c711bb&quot;)" time="0.0091090" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ThrowsBookSharingGenericExceptionWhenBookCouldNotBeDeleted(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:9b4d&gt;)" time="0.0028049" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ThrowsAccessDeniedExceptionUserNotOwnerAndNotAdminOrSuperAdmin(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:d0b9&gt;)" time="0.0021388" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserVerifyResetPasswordHashCommandHandlerTests" name="Hadle_VerifyPasswordResetTokenReturnFalse_ShouldThowException(command: UserVerifyResetPasswordHashCommand { Email = &quot;Email45d69748-cba2-4efa-a4d9-25ab0168abc7&quot;, Hash = &quot;Hashb28ea124-5495-43d3-867e-1cb4feb5df04&quot; }, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:55c5&gt;, handler: UserVerifyResetPasswordHashCommandHandler { })" time="0.0037902" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FileManagement.DeleteFile.DeleteFileCommandHandlerTests" name="Handle_NotOwnerAndUserRole_DeleteCover_ThrowsException(command: DeleteFileCommand { BookId = &quot;bookIdc04398bb-bcda-404c-b703-175ea6dcd8d6&quot;, UserId = &quot;UserId088ac4ca-eac0-4b72-92a4-30423eb9f767&quot;, UserRoles = [User, Admin, SuperAdmin] }, iBookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:442c&gt;, sut: DeleteFileCommandHandler { }, book: Book { AuthorId = &quot;AuthorIdec2e06e1-6457-4960-ba9b-e10ccd1a09c8&quot;, CoverId = &quot;CoverId3061970b-a04a-4178-8a7a-85c5c97ce315&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id6afd1bdc-6584-4db5-98a7-c0bcd7eacb30&quot;, IsDraft = True, ... })" time="0.0027305" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FeedbackManagement.RemoveFeedback.RemoveReviewCommandHandlerTests" name="Handle_WithValidId_ShouldNotThrowNotFound(reviewRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:110c&gt;, sut: RemoveReviewCommandHandler { }, feedbackId: &quot;feedbackId1153c86e-958c-48c2-93a9-139fb2837196&quot;)" time="0.0030404" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.GetUserDetails.GetUserDetailsQueryHandlerTests" name="Handle_WhenInvalidUserId_ThrowNotFoundException(userRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:9733&gt;, sut: GetUserDetailsQueryHandler { }, authenticatedUser: AuthenticatedUser { Id = &quot;idfe896b79-d392-4546-8a09-0ca11ec2e892&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [User, Admin, SuperAdmin] })" time="0.0037851" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandHandlerTests" name="Handle_WhenBookIsAlreadyInWishlist_ThrowsBookSharingException(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:ebaa&gt;, wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:f75d&gt;, command: AddBookToWishlistCommand { BookId = BookId16703879-5a30-46fa-9c26-d8660de781da, UserId = UserId55a5c65c-fe4f-4002-949d-9a16e73a2558 }, book: Book { AuthorId = &quot;AuthorId56375ab8-5805-4fdd-87a1-5dab3465d9c9&quot;, CoverId = &quot;CoverId377cbbea-3d21-4999-b18a-b4a4997b0bdf&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Idf307af73-a2cb-4caf-8109-7bc81b948c00&quot;, IsDraft = True, ... })" time="0.0182266" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ThrowsBookSharingGenericExceptionWhenBookNotFound(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:005f&gt;)" time="0.0160750" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooksByOwner.ListBooksByOwnerQueryTests" name="Constructor_ShouldSetProperties(ownerId: &quot;ownerId142ac175-3de5-41fe-9af0-43ebc4b40219&quot;, filter: PaginationFilter { PageNumber = 1, PageSize = 12 })" time="0.0009241" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.PasswordReset.ResetPasswordCommandTests" name="Constructor_ShouldSetProperties(email: &quot;email58210528-bd94-4382-88d2-92ed5ddf6704&quot;)" time="0.0001471" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserVerifyResetPasswordHashCommandHandlerTests" name="Hadle_VerifyPasswordResetToken_ReturnsTrue(command: UserVerifyResetPasswordHashCommand { Email = &quot;Email709708e3-106e-401d-88dd-95e5a82900c7&quot;, Hash = &quot;Hash5b2463cd-2544-4c32-927c-7cf6300671db&quot; }, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:1745&gt;, handler: UserVerifyResetPasswordHashCommandHandler { })" time="0.0027051" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ThrowsBookSharingGenericExceptionWhenGivenInvalidID(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:260d&gt;)" time="0.0009419" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.CreateReview.CreateReviewCommandHandlerTest" name="Handle_WhenBookDoesNotExist_ShouldThrowException(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:0beb&gt;, reviewRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:4910&gt;, sut: CreateReviewCommandHandler { }, command: CreateReviewCommand { BookId = &quot;BookId26389eda-7c25-4bd5-87ae-927172a5dcc0&quot;, Content = &quot;Content421a4d2c-c202-415d-9d6b-053fe8adf303&quot;, Rating = 198, Title = &quot;Title9075067e-216c-4e6f-a397-34257b1fcef4&quot;, UserId = &quot;currentUserIda5c0bb48-453f-4b48-b853-10101ceed1e4&quot; })" time="0.0180192" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.GetUserDetails.GetUserDetailsQueryHandlerTests" name="Handle_ReturnCorrectUserDetails(userRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:1a94&gt;, sut: GetUserDetailsQueryHandler { }, user: User { Email = &quot;Emailebbb66ec-ff2f-4be6-898a-22fe3fbb173f&quot;, FirstName = &quot;FirstNamef6f74241-b502-4a67-bda8-9b6cbaff9d6e&quot;, Id = &quot;Idc5306747-b12d-441e-bee5-d7dcb2d935d8&quot;, LastName = &quot;LastName6fda2991-77ad-4259-9ff0-3760d7ce25bb&quot;, UserName = &quot;UserName49059c8e-8a4c-4969-8bd5-0099c664106c&quot; })" time="0.0021776" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.ResetPassword.UserResetPasswordCommandTests" name="CreateObject_WithValidParameter_ValuesHaveBeenAssignedToFields(request: UserResetPasswordRequest { Email = &quot;Emaild3e5fc65-65a1-46ab-93ff-0fb4d19b6f13&quot;, Hash = &quot;Hash6ecf990d-28a2-42da-96c5-b6bdc1c55d10&quot;, Password = &quot;Password6a7dfbc5-8664-4137-ba33-ae4244e957f9&quot; })" time="0.0009358" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.DeleteBook.DeleteBookCommandHandlerTests" name="DeleteBook_Handle_ReturnsUnitWithValidDataWhenUserIsOwner(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:e81a&gt;)" time="0.0030226" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.WishlistManagement.AddBookToWishlist.AddBookToWishlistCommandHandlerTests" name="Handle_BookAddedToWishlist_ThrowsBookSharingNotFoundException(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:8d52&gt;, wishlistRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IWishlistRepository:d31e&gt;, command: AddBookToWishlistCommand { BookId = BookId50f4dc92-de29-41ee-8859-0d5f0b080173, UserId = UserIdd5cd465e-3d4b-481b-8704-51c2d6b2338b }, book: Book { AuthorId = &quot;AuthorIda1394c0a-0b72-457c-8438-906ff1b94f60&quot;, CoverId = &quot;CoverIda3b93003-eb3c-4a7c-8e25-60835e191866&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Idaeccb9fe-8a5a-447d-ba0d-3f4aee69f821&quot;, IsDraft = True, ... })" time="0.0043524" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Mappers.ModelMapperTests" name="ShouldMapObjectToAnotherObject(languageDb: LanguageDb { Id = &quot;Id982ac107-cbf3-4d1d-80d7-9a509df34239&quot;, Name = &quot;Name251721fc-2317-487b-961b-d0b2b09f17bb&quot; }, _mapper: Mock&lt;Endava.BookSharing.Application.Abstract.IModelMapper:c8e2&gt;)" time="0.0445895" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.FeedbackManagement.RemoveFeedback.RemoveReviewCommandHandlerTests" name="Handle_ShouldCallRemoveFeedbackAsync(reviewRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:356c&gt;, sut: RemoveReviewCommandHandler { }, feedbackId: &quot;feedbackId840c29a5-40bb-4a6a-bbb3-bd245c6465dd&quot;)" time="0.0049855" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.CreateBook.CreateBookCommandHandlerTests" name="Handle_WhenGivenInvalidLanguageId_ThrowsBookSharingNotFoundException(request: CreateBookRequest { AuthorFullName = &quot;AuthorFullName8b3f8b84-c7ac-4ff5-b645-4dee25e50f03&quot;, AuthorId = &quot;AuthorId82dcc7b8-8583-41c9-9cdc-038bd3a1db4a&quot;, File = Mock&lt;Microsoft.AspNetCore.Http.IFormFile:56dc&gt;.Object, GenreIds = [&quot;abe1ea96-5513-48fd-8aab-41159a2eab53&quot;, &quot;69cf3b1f-0702-4683-a3fb-c00eeb1bcbc2&quot;, &quot;b7e709bc-c4bc-41fe-8b23-e20ee179108a&quot;], LanguageId = &quot;LanguageId7ac71534-7132-4520-9e1c-82129e43a514&quot;, ... }, image: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:ddea&gt;.Object, mediator: Mock&lt;MediatR.IMediator:b2ba&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:c94c&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:42c3&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:5713&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:a127&gt;, fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:3aee&gt;)" time="0.0496270" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_ValidSymbols_ShouldReturnSuccessValidation(username: &quot;user2&quot;)" time="0.0037680" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_ValidSymbols_ShouldReturnSuccessValidation(username: &quot;user&quot;)" time="0.0002489" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_ValidSymbols_ShouldReturnSuccessValidation(username: &quot;User&quot;)" time="0.0002313" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.ReviewManagement.CreateReview.CreateReviewCommandHandlerTest" name="Handle_WhenBookExists_ShouldInvokeCreateReviewAsyncMethod(bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:7e0e&gt;, reviewRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:f649&gt;, sut: CreateReviewCommandHandler { }, command: CreateReviewCommand { BookId = &quot;BookIdaf8b4a00-cea0-4a62-b599-2f154fef7cb1&quot;, Content = &quot;Content199600fe-82e9-4f55-a3c5-4856ecbe92fb&quot;, Rating = 97, Title = &quot;Title2ac49be7-b241-4105-a5d7-ddb8f65a80e6&quot;, UserId = &quot;currentUserId4fe6b8ce-40fb-43cd-9a33-fc54544b67a5&quot; }, book: Book { AuthorId = &quot;AuthorIdd17159a6-6318-4869-bc7f-b93a01cb71ba&quot;, CoverId = &quot;CoverIdcd1f750b-4ea8-4152-9b6e-e899f66897f3&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], Id = &quot;Id207d617f-0b6f-4edb-b7a7-d29a69627441&quot;, IsDraft = True, ... })" time="0.0029199" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_ValidSymbols_ShouldReturnSuccessValidation(username: &quot;user.name&quot;)" time="0.0002232" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThis@IsEmail&quot;)" time="0.0003595" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybe###$This@Is.Email&quot;)" time="0.0002595" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThis@@IsEmail&quot;)" time="0.0007511" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.LanguageManagement.GetLanguagesList.GetLanguagesListQueryHandlerTests" name="Handle_ShouldCallListAllAsync(languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:ac0d&gt;, sut: GetLanguagesListQueryHandler { }, languages: [Language { Id = &quot;Id1f65e545-41a4-4e15-b461-e1b2700e87f4&quot;, Name = &quot;Namec55c35d1-6616-46fc-b282-1fc4f4e08180&quot; }, Language { Id = &quot;Id477c95c2-4dfa-4f93-922e-ac93787fa01d&quot;, Name = &quot;Name1321891b-ba2d-461a-b7e5-21b045e01aba&quot; }, Language { Id = &quot;Id886edc9b-607f-42ce-bc14-6a3035813de8&quot;, Name = &quot;Namef9156f83-4361-4319-a768-5fad2b3a7554&quot; }])" time="0.0030754" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThis@IsEmail.&quot;)" time="0.0002273" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybe This.IsEmail&quot;)" time="0.0002423" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThis..IsEmail&quot;)" time="0.0002626" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;MaybeThisIs@.Email&quot;)" time="0.0002570" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybe\tThis.IsEmail&quot;)" time="0.0003644" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;----maybeThis@Is.Email///&quot;)" time="0.0002434" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThisIsEmail&quot;)" time="0.0002645" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_InvalidEmail_Rejects(email: &quot;maybeThis.IsEmail&quot;)" time="0.0002321" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.LanguageManagement.GetLanguagesList.GetLanguagesListQueryHandlerTests" name="Handle_ShouldReturnLanguagesList(languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:19ce&gt;, sut: GetLanguagesListQueryHandler { }, languages: [Language { Id = &quot;Id3679b0fd-40d2-4d94-aeae-8591d6908222&quot;, Name = &quot;Name96fadb64-118b-44e4-8bfa-bf9b4f25227c&quot; }, Language { Id = &quot;Id91568c65-e4a0-483a-a3b6-c614ff7f6660&quot;, Name = &quot;Namee93c5bb0-f906-4eb7-868c-4e43f0919c4c&quot; }, Language { Id = &quot;Id69b5f4db-32ec-46f9-91f1-5978baf9a955&quot;, Name = &quot;Name591f729d-f205-462a-aef6-d4216d4a3ba9&quot; }])" time="0.0015343" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithSomeCharacters(password: &quot;password&quot;)" time="0.0003830" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithSomeCharacters(password: &quot;bbb\nbbb&quot;)" time="0.0002678" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;us\ter&quot;)" time="0.0003483" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;us er&quot;)" time="0.0002686" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryHandlerTests" name="Handle_WhenNoBooksAvailable_ThrowsBookSharingNotFoundException(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:5a82&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:2411&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrl73daaec5-b5a6-44b0-8e51-4d83e53749bf&quot;, Url = &quot;Url18820eb6-062b-4da8-9cb6-de2981642eb5&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:57ec&gt;, fixture: [[[...]]])" time="0.0510179" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;юзер&quot;)" time="0.0002405" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;us\ner&quot;)" time="0.0002263" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;NiKi\tta&quot;)" time="0.0002415" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_UserName_InValidSymbols_ShouldReturnFailedValidation(username: &quot;usеr&quot;)" time="0.0002385" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooksByOwner.ListBooksByOwnerQueryHandlerTests" name="Handle_ShouldCallAllMethods(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:d8be&gt;, queryStub: ListBooksByOwnerQuery { Filter = PaginationFilter { PageNumber = 1, PageSize = 12 }, OwnerId = &quot;ownerIdc74444c2-d9e0-4c96-ad89-50a187d99474&quot; }, countOfBooks: 18, books: [Book { AuthorId = &quot;AuthorId83ce469a-8ed9-45b8-b9fd-65c9e2ade026&quot;, CoverId = &quot;CoverId72d5b85a-5639-4d3d-9f41-0a65ffa91908&quot;, Genres = [...], Id = &quot;Idd652e700-edde-4410-a522-5769ef68b4d5&quot;, IsDraft = True, ... }, Book { AuthorId = &quot;AuthorId94c4bfc3-c541-457d-866f-a92fc1000bb5&quot;, CoverId = &quot;CoverId84e92801-ec5d-4de9-9e3e-68c1868c54f8&quot;, Genres = [...], Id = &quot;Id4c8dbb29-6e83-4b71-aa39-930f3a712073&quot;, IsDraft = False, ... }, Book { AuthorId = &quot;AuthorId1e76b3a9-2ad6-4a42-aedd-3bc4ffc516c9&quot;, CoverId = &quot;CoverIdf93bfb42-3e18-4099-ab0c-1773cb4878bd&quot;, Genres = [...], Id = &quot;Idf5c9b36c-5d53-4000-858e-517c8df5a9f2&quot;, IsDraft = True, ... }], bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrlff7dda03-d02d-4f1f-9b5a-dfaf6c32dbfd&quot;, Url = &quot;Url939fc1dc-ae31-48f8-a69a-ef08f44b1b02&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:87dc&gt;, responses: [ListBooksByOwnerItemsResponse { Cover = &quot;Cover1233b7f3-6cc7-4e77-a7ca-29867672a1b9&quot;, Id = &quot;Idc744983c-00a5-47e5-a468-282f685795c4&quot;, Title = &quot;Title645178bc-92b8-4186-bd57-50ddb892b348&quot; }, ListBooksByOwnerItemsResponse { Cover = &quot;Coverb47847a1-c4d7-404c-8763-d3ee8fa4b38a&quot;, Id = &quot;Ide17dd67e-bc77-44bd-ac39-93a6b4ce74c0&quot;, Title = &quot;Title986e97a0-7764-464a-b05f-b7aa5e8019d5&quot; }, ListBooksByOwnerItemsResponse { Cover = &quot;Coverdf65822e-7b40-4fce-9f26-4b41a6b7bd99&quot;, Id = &quot;Id4672f73e-3929-4f43-9f75-6ca5b26d2671&quot;, Title = &quot;Titlec81b9b7f-362a-42c2-b3b9-f88745046b36&quot; }])" time="0.0074939" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_FirstNameWithInvalidLength_Rejects(firstName: &quot;bb&quot;)" time="0.0006269" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_FirstNameWithInvalidLength_Rejects(firstName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0003549" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.CreateBook.CreateBookCommandHandlerTests" name="Handle_WhenGivenAllValidData_NotThrowAsync(mediator: Mock&lt;MediatR.IMediator:ed7a&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:a83a&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:1159&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:7f55&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:d5ab&gt;, fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:749c&gt;, image: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:52dd&gt;.Object, imageFromReq: Mock&lt;Microsoft.AspNetCore.Http.IFormFile:e5b6&gt;.Object)" time="0.0087135" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_FirstNameWithInvalidLength_Rejects(firstName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;...)" time="0.0002534" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignUpUser.UserSignUpCommandHandlerTests" name="Handle_WithUniqueEmailAndUserName_UserCreated_AssignRoleSuccess_ShouldReturnUnit(command: UserSignUpCommand { Password = &quot;Password3001a26f-fd8f-4b55-aa3a-a895edfb8e24&quot;, User = User { Email = &quot;Email90424f59-2bd8-436b-8936-e7bdabb6829a&quot;, FirstName = &quot;FirstName96d0a1e3-e36c-4396-9ce2-274c2e88970d&quot;, Id = &quot;Idee5963df-f9b2-4fa9-909f-64f02827deb5&quot;, LastName = &quot;LastName31708088-d32b-47ed-891c-ea72fdcb497f&quot;, UserName = &quot;UserName86e001f1-a6f7-42c7-b22b-737ba5eb4b87&quot; } }, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:02fc&gt;, userRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:5055&gt;, sut: UserSignUpCommandHandler { })" time="0.0077679" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidLength_Rejects(lastName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0003459" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidLength_Rejects(lastName: &quot;bb&quot;)" time="0.0003260" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidLength_Rejects(lastName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;...)" time="0.0003882" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenBookNotFoundWithId(mediator: Mock&lt;MediatR.IMediator:77b0&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:98d1&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:3699&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:0407&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:2a8b&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:9b4d&gt;)" time="0.1126108" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidCharacters_Reject(lastName: &quot;bbb\tbbb&quot;)" time="0.0003878" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidCharacters_Reject(lastName: &quot;жгыф&quot;)" time="0.0002336" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.AuthorManagement.CreateAuthor.CreateAuthorCommandHandlerTests" name="Handle_ShouldCallCreateAsync(authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:6a8c&gt;, userRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:4fa4&gt;, sut: CreateAuthorCommandHandler { }, fullName: &quot;fullName623318a2-12f4-4d70-8c05-085554748e23&quot;, addedById: &quot;addedById1b1b25f6-b047-4922-bde1-3fd5b215bc02&quot;, author: Author { AddedByUserId = &quot;AddedByUserId1547fb28-4ed0-4d1a-b169-324e6e57e5b3&quot;, FullName = &quot;FullNameda40124f-65b5-4be3-a46c-876f020c7bab&quot;, Id = &quot;Id27831616-6874-4a1c-a1c2-8ad3d1709fc3&quot;, IsApproved = True }, user: User { Email = &quot;Emaila9af70be-bc2e-40bc-ae99-1221f1f4dffc&quot;, FirstName = &quot;FirstName9781d131-7ced-4ac8-b93e-1969b9fd42b8&quot;, Id = &quot;Id9e897140-2e66-41f6-bcab-49b1a6a95609&quot;, LastName = &quot;LastName267c9b1d-ad37-49cd-a1f8-b26669ac2a28&quot;, UserName = &quot;UserName404dfbfc-e325-494a-93bb-ff65cde022fd&quot; })" time="0.0089506" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidCharacters_Reject(lastName: &quot;bbb123&quot;)" time="0.0002268" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithInvalidCharacters_Reject(lastName: &quot;123&quot;)" time="0.0002204" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryHandlerTests" name="Handle_PageIsZeroToPageEqualsOne_ReturnsTrue(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:2710&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:035f&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrl8f7986ba-aab0-40ea-9c16-cef99dad77bd&quot;, Url = &quot;Urld50c7032-c3f3-4672-83ee-c95aacae2218&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:787f&gt;, fixture: [[[...]]])" time="0.0038391" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_ValidFirstName_Accepts(firstName: &quot;NikiTa&quot;)" time="0.0003583" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandHandlerTests" name="HandleUserGetBookDetails_BookWithExpectedRating_ReturnsTrue(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:aac9&gt;, reviewRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IReviewRepository:0c8e&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrldbe550df-c039-46b0-a96a-01ad147b0d0a&quot;, Url = &quot;Urled731762-a017-4078-9bc4-0145beb1e50c&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:0600&gt;, command: GetBookCommand { AuthenticatedUser = AuthenticatedUser { Id = &quot;id2ba907fc-ed3f-49e4-ac8f-0ca19f669cb0&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [...] }, BookId = &quot;BookId82ca46e1-3336-42a1-bd51-385f48210c65&quot; }, book: BookDetailsDto { Author = AuthorResponse { FullName = &quot;FullName0889f70c-7753-4d85-8f5a-90bd240bf309&quot;, Id = &quot;Id49cf7074-5ffe-42f8-a0d7-4db8a67578b0&quot; }, Cover = &quot;Cover35a39d56-e3bd-409c-aee7-f29c3f30d3be&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], IsEditable = True, Language = Language { Id = &quot;Idbd7f9104-0f43-4411-a0de-6113c85d8dee&quot;, Name = &quot;Namea7b9fcc9-5460-497c-8e2e-49145fa5b270&quot; }, ... }, fixture: [[[...]]])" time="0.1676871" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_ValidFirstName_Accepts(firstName: &quot;nikita&quot;)" time="0.0002236" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_ValidFirstName_Accepts(firstName: &quot;NIKITA&quot;)" time="0.0002222" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_ValidFirstName_Accepts(firstName: &quot;Nikita&quot;)" time="0.0002447" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.CreateBook.CreateBookCommandHandlerTests" name="Handle_WhenGivenInvalidGenreIds_ThrowsBookSharingNotFoundException(request: CreateBookRequest { AuthorFullName = &quot;AuthorFullName7d2dbb35-94dc-4084-b1a0-5b266c6925c6&quot;, AuthorId = &quot;AuthorIdc9bd5b15-bb7c-4eb6-a943-ff2f830b04df&quot;, File = Mock&lt;Microsoft.AspNetCore.Http.IFormFile:f57f&gt;.Object, GenreIds = [&quot;c11bd7b0-1a98-4a8e-bf51-0056a8bf1ad1&quot;, &quot;7ac401e8-4ea3-4b72-ae05-59ec9bd4bc48&quot;, &quot;07678457-82c1-44c0-89ba-bc563d3cbba1&quot;], LanguageId = &quot;LanguageId70558814-48d8-404c-929f-6a9c4037c4b3&quot;, ... }, image: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:8fb8&gt;.Object, mediator: Mock&lt;MediatR.IMediator:0d5b&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:625c&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:3d9d&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:22df&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:3fff&gt;, fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:bdc1&gt;)" time="0.0023175" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_InvalidFirstName_Rejects(firstName: &quot;n1k1ta&quot;)" time="0.0003471" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_InvalidFirstName_Rejects(firstName: &quot;nikit@&quot;)" time="0.0002604" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_InvalidFirstName_Rejects(firstName: &quot;nikit\ta&quot;)" time="0.0002574" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_FirstNameWithSomeSymbols_Accepts(firstName: &quot;Nikita&quot;)" time="0.0003681" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_FirstNameWithSomeSymbols_Accepts(firstName: &quot;Nikita123&quot;)" time="0.0002890" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_EmptyOrNullEmail_Rejects(email: &quot;&quot;)" time="0.0003990" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_EmptyOrNullEmail_Rejects(email: null)" time="0.0002579" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidCharacters_Accepts(lastName: &quot;Nikitov&quot;)" time="0.0003998" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidCharacters_Accepts(lastName: &quot;NikItOv&quot;)" time="0.0002442" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidCharacters_Accepts(lastName: &quot;NIKITOV&quot;)" time="0.0002633" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryHandlerTests" name="Handle_PageIsNegatveToPageEqualsOne_ReturnsTrue(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:63e6&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:f089&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrlb4d6afdf-db42-4f2b-b340-39d4ac5df16a&quot;, Url = &quot;Url42080800-1826-4464-b047-cbc34604bb7c&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:88f5&gt;, fixture: [[[...]]])" time="0.0035427" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.CreateBook.CreateBookCommandHandlerTests" name="Handle_WhenGivenInvalidAuthorId_ThrowsBookSharingNotFoundException(request: CreateBookRequest { AuthorFullName = &quot;AuthorFullName35ff3c00-30ae-416f-85dc-180b5cdf5df4&quot;, AuthorId = &quot;AuthorId926b2db6-d86c-4f18-b1a8-4c1a7f65ca5d&quot;, File = Mock&lt;Microsoft.AspNetCore.Http.IFormFile:09d7&gt;.Object, GenreIds = [&quot;aaf46911-ee51-400c-a777-db508d4994b4&quot;, &quot;63d512a5-4e58-44de-8133-975d6ec3665f&quot;, &quot;afcf5ddd-d74e-475f-9943-0f415237ebb7&quot;], LanguageId = &quot;LanguageIdae4127f5-3796-4bdb-8516-c2a20add4cad&quot;, ... }, image: Mock&lt;Endava.BookSharing.Domain.Abstractions.IFileData:e5a3&gt;.Object, mediator: Mock&lt;MediatR.IMediator:a3a0&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:dcce&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:9943&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:d215&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:8dc8&gt;, fileRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IFileRepository:3102&gt;)" time="0.0022591" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_InvalidPassword_Rejects(password: &quot;passеword&quot;)" time="0.0004614" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_InvalidPassword_Rejects(password: &quot;pass\nword&quot;)" time="0.0002587" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.AuthorManagement.CreateAuthor.CreateAuthorCommandHandlerTests" name="Handle_ShouldReturnCreatedAuthorId(authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:85bf&gt;, userRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:e90f&gt;, sut: CreateAuthorCommandHandler { }, fullName: &quot;fullName963413c7-777e-4bfe-92a6-dd58ee6c3f82&quot;, addedById: &quot;addedByIdc42bd73d-b5c6-4e5b-987d-4f80cfeeacac&quot;, author: Author { AddedByUserId = &quot;AddedByUserIdf51a4637-b2e4-4aab-acf3-43c1bf861f85&quot;, FullName = &quot;FullName28781018-db9e-4935-a23b-1d38e25149f0&quot;, Id = &quot;Ida2eb9716-8c33-4f7c-9371-dd8daa08312c&quot;, IsApproved = True }, user: User { Email = &quot;Email5f0f7270-7bae-4abb-9b66-6ac61206fce2&quot;, FirstName = &quot;FirstName85cbe1dd-ea83-4b34-b931-3526d5efa99c&quot;, Id = &quot;Id854f84e6-1d42-4201-b349-3a124715750d&quot;, LastName = &quot;LastNameb742a051-b0a6-4c8c-ba1b-6abcb090d586&quot;, UserName = &quot;UserNamefe04be3c-0118-4643-8554-4d985678f792&quot; })" time="0.0035992" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_InvalidPassword_Rejects(password: &quot;pass\tword&quot;)" time="0.0181540" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_InvalidPassword_Rejects(password: &quot;pass word&quot;)" time="0.0002324" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandHandlerTests" name="HandleAdminGetBookDetails_IsEditable_ReturnsTrue(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:4772&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrl170e4f24-6c1c-4e34-8798-e91a633a9038&quot;, Url = &quot;Url65653c47-f3af-4f0d-9f72-85743441c62e&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:1622&gt;, command: GetBookCommand { AuthenticatedUser = AuthenticatedUser { Id = &quot;id4347d8d6-fdf9-4cf0-83c7-ba2bb2b69c12&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [...] }, BookId = &quot;BookId940199f0-e341-4e1e-aa3f-8aa3cc1fe7ec&quot; }, book: BookDetailsDto { Author = AuthorResponse { FullName = &quot;FullNameb8a4be7d-0556-47f4-9f25-5d79e6dc592c&quot;, Id = &quot;Idf0bb4fe5-2262-4334-9a98-3ec55a75a526&quot; }, Cover = &quot;Cover7f813d37-f187-496f-8cca-747161a839f1&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], IsEditable = True, Language = Language { Id = &quot;Id197f7ff4-bbce-4ad7-a60b-ad802ee7465d&quot;, Name = &quot;Name275e80b0-c8d0-4e63-8229-11cc3ce19260&quot; }, ... }, fixture: [[[...]]])" time="0.0207404" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_InvalidPassword_Rejects(password: &quot;пароль&quot;)" time="0.0002050" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignUpUser.UserSignUpCommandHandlerTests" name="Handle_WithUniqueEmailAndUserName_UserCreated_ShouldEnsureRoleExists(commandStub: UserSignUpCommand { Password = &quot;Password87208042-587a-4177-a873-f1b21dcf0351&quot;, User = User { Email = &quot;Emailaeaf19ab-5ce0-47d7-aa21-f8e0cc5f988d&quot;, FirstName = &quot;FirstName6da4018a-50e9-4120-8fde-dc4507e24501&quot;, Id = &quot;Id79e1689a-151d-4e56-a0cb-bdbe3e134f6b&quot;, LastName = &quot;LastName13f98493-3d8d-4be8-89fc-998e65a958a1&quot;, UserName = &quot;UserNamebf6cddcf-7e98-49b2-8760-933dcbb58914&quot; } }, userRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:9b52&gt;, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:1317&gt;, sut: UserSignUpCommandHandler { })" time="0.0255780" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_NotEmptyEmail_Accepts(email: &quot;MaybeThis@is.Email&quot;)" time="0.0003579" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_NotEmptyEmail_Accepts(email: &quot;MaybeThisIsEmail&quot;)" time="0.0002147" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidLength_Accepts(lastName: &quot;bbb&quot;)" time="0.0003781" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidLength_Accepts(lastName: &quot;bbbbbbbbbbbbbbbbb&quot;)" time="0.0002302" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithValidLength_Accepts(lastName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002045" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_EmptyOrNullFirstName_Rejects(firstName: &quot;&quot;)" time="0.0003548" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_EmptyOrNullFirstName_Rejects(firstName: null)" time="0.0002288" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;MaybeThis@Is.Email&quot;)" time="0.0003310" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;MaybeThis@Is.Email123&quot;)" time="0.0002185" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;.....maybeThis@Is.Email&quot;)" time="0.0001973" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;.....maybeThis@Is.Email.....&quot;)" time="0.0002022" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;MaybeThis1@Is2.Email3&quot;)" time="0.0002167" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.ListBooks.ListAvailableBooksQueryHandlerTests" name="Handle_CoverUrlStartsWithTheSameHost_ReturnsTrue(genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:bd5a&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:8506&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrlc45dd699-b062-4bba-aae9-1785445d06ab&quot;, Url = &quot;Urlc3b4b1f2-1fbd-4e64-b52f-a4cfc9262aa6&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:235e&gt;, fixture: [[[...]]])" time="0.0041472" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;MaybeThis@Is123.Email&quot;)" time="0.0002094" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Email_ValidEmail_Accepts(email: &quot;MaybeThis123@Is.Email&quot;)" time="0.0002240" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameNikita_AcceptsBecauseNotEmpty(username: &quot;Nikita&quot;)" time="0.0003869" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithSomeCharacters_Accept(lastName: &quot;Nikitov123&quot;)" time="0.0003338" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_LastNameWithSomeCharacters_Accept(lastName: &quot;Nikitov&quot;)" time="0.0002156" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_EmptyOrNullUsername_DoesntAllowEmpty(username: null)" time="0.0003334" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_EmptyOrNullUsername_DoesntAllowEmpty(username: &quot;&quot;)" time="0.0002053" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandHandlerTests" name="HandleUserGetBookDetails_IsEditable_ReturnsFalse(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:c2c0&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrl31a394fc-fae7-4fee-8806-e8808492b57f&quot;, Url = &quot;Url514ae8cd-e423-4b79-9ca1-f9b1be7a2c29&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:acfd&gt;, command: GetBookCommand { AuthenticatedUser = AuthenticatedUser { Id = &quot;id9e874a4c-f5d1-41f0-b5d5-7767155fbe68&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [...] }, BookId = &quot;BookIdc1b94a95-5045-4ffd-a45b-4c01820d783f&quot; }, book: BookDetailsDto { Author = AuthorResponse { FullName = &quot;FullNamee079608f-3999-4111-90a5-da01555dd69b&quot;, Id = &quot;Ida48ea6a1-b376-4eb4-8c80-03d9e1000431&quot; }, Cover = &quot;Cover5e55d1ee-f253-4826-8fea-4f6cc999d1b1&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], IsEditable = True, Language = Language { Id = &quot;Id1f63ea8f-72d8-47fa-8a91-2f0f4fe3b0e6&quot;, Name = &quot;Namea2fd3c35-eacf-4d51-8fd7-8d78d7313671&quot; }, ... }, fixture: [[[...]]])" time="0.0028443" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_NameWithValidLength_Accepts(firstName: &quot;bbb&quot;)" time="0.0003228" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_NameWithValidLength_Accepts(firstName: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002049" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_FirstName_NameWithValidLength_Accepts(firstName: &quot;bbbbbbbbbbbbbbb&quot;)" time="0.0002034" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordNullOrEmpty_Rejects(password: &quot;&quot;)" time="0.0003466" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordNullOrEmpty_Rejects(password: null)" time="0.0002322" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ReturnsUnit(mediator: Mock&lt;MediatR.IMediator:0be4&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:9bf5&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:765b&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:7a09&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:8be4&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:3526&gt;)" time="0.0323789" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithAllowedLength_Accepts(username: &quot;bbbbbbb&quot;)" time="0.0003174" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithAllowedLength_Accepts(username: &quot;bbb&quot;)" time="0.0002189" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignUpUser.UserSignUpCommandHandlerTests" name="Handle_WithUniqueEmailAndUserName_UserCreated_AssignRoleFailed_ShouldThrowException(command: UserSignUpCommand { Password = &quot;Passwordd1cfcfa9-1ff7-492e-b098-6b6bf587acb2&quot;, User = User { Email = &quot;Email7a437b83-3b8d-4a00-9dc1-c84b328dc29a&quot;, FirstName = &quot;FirstNamef7f4b0b6-d3a1-4d86-842d-6ab9f71fb4a9&quot;, Id = &quot;Id4aa533b2-06ed-41ab-9d46-67c7a71c849d&quot;, LastName = &quot;LastName500e2c77-c589-4aee-b61f-fde603813078&quot;, UserName = &quot;UserName6b11ba39-231c-421f-b210-f042e45954cf&quot; } }, userRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:d5a5&gt;, identityServiceMock: Mock&lt;Endava.BookSharing.Application.Abstract.IIdentityService:ba75&gt;, sut: UserSignUpCommandHandler { })" time="0.0058843" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithAllowedLength_Accepts(username: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002240" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithInvalidLength_Rejects(password: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;...)" time="0.0003396" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithInvalidLength_Rejects(password: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002157" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithInvalidLength_Rejects(password: &quot;bb&quot;)" time="0.0002034" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithNotallowedLengthCharacters_DoesntAccept(username: &quot;bb&quot;)" time="0.0003167" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithNotallowedLengthCharacters_DoesntAccept(username: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;...)" time="0.0002089" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Username_UsernameWithNotallowedLengthCharacters_DoesntAccept(username: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002142" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithValidLength_Accepts(password: &quot;bbb&quot;)" time="0.0003311" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithValidLength_Accepts(password: &quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&quot;)" time="0.0002120" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_PasswordWithValidLength_Accepts(password: &quot;bbbbbbbbbbbbb&quot;)" time="0.0002302" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_ValidPassword_Accepts(password: &quot;Password&quot;)" time="0.0003214" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_ValidPassword_Accepts(password: &quot;password&quot;)" time="0.0002225" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_Password_ValidPassword_Accepts(password: &quot;password2&quot;)" time="0.0002067" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_emptyOrNullLastnName_Rejects(lastName: &quot;&quot;)" time="0.0003222" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.Models.Validators.UserSignUpValidatorTests" name="Validate_LastName_emptyOrNullLastnName_Rejects(lastName: null)" time="0.0002217" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.AuthorManagement.GetAuthorsList.GetAuthorsListQueryHandlerTests" name="Handle_ShouldCallListAllAsync(authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:2c6a&gt;, sut: GetAuthorsListQueryHandler { }, authors: [Author { AddedByUserId = &quot;AddedByUserId489113ec-e054-4b93-9206-4d82b891fefa&quot;, FullName = &quot;FullName6cee9fb0-e9b8-4220-9f5f-f0cdcf3761cb&quot;, Id = &quot;Id5695a088-6ae0-401b-9407-898031f32d83&quot;, IsApproved = True }, Author { AddedByUserId = &quot;AddedByUserId54158453-9206-465c-82c6-02929aad8c49&quot;, FullName = &quot;FullNameb58ba61d-3855-42f4-ab5f-703fe3b48968&quot;, Id = &quot;Id0f126fbd-53c6-4f33-ad61-aefb4297cb55&quot;, IsApproved = False }, Author { AddedByUserId = &quot;AddedByUserId7e12db2c-45d6-4fb0-baa5-a81ce91a39e0&quot;, FullName = &quot;FullNamec25a4d91-a995-4b1c-b919-a8b00bfca5fc&quot;, Id = &quot;Id2d68b0de-252b-4f80-a871-91a851394494&quot;, IsApproved = True }])" time="0.0466636" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.UserManagement.SignUpUser.UserSignUpCommandHandlerTests" name="Handle_WithUniqueEmailAndUserName_UserCreationFailed_ShouldThrowException(commandStub: UserSignUpCommand { Password = &quot;Passwordfeacabe1-eb74-47af-9413-80223f69fcb5&quot;, User = User { Email = &quot;Emailba0985ee-b54a-4012-b06e-034291b6d5ef&quot;, FirstName = &quot;FirstName2d94ca6d-f28d-42b7-8108-380f31120b4b&quot;, Id = &quot;Id31e5dfbb-e042-45fe-8fd0-78fb437efaf7&quot;, LastName = &quot;LastName99d37d37-0c9b-4902-9b48-9d094f325c29&quot;, UserName = &quot;UserNameacc223e3-c858-4f0c-a284-ef9603ee4eb2&quot; } }, userRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IUserRepository:f9bd&gt;, sut: UserSignUpCommandHandler { })" time="0.0043886" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenFailedToUpdateBook(mediator: Mock&lt;MediatR.IMediator:8c68&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:402b&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:fc9f&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:b909&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:2000&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:2afd&gt;)" time="0.0061362" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandHandlerTests" name="Handle_WhenInvalidBookId_ThrowsException(command: GetBookCommand { AuthenticatedUser = AuthenticatedUser { Id = &quot;idd58ce3d0-ed02-4828-9023-77185a8571d8&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [...] }, BookId = &quot;BookIdad6abb45-f23c-4270-aa3f-2580f190035d&quot; }, bookRepositoryMock: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:4212&gt;, sut: GetBookCommandHandler { })" time="0.0013649" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenGenresAreNull(mediator: Mock&lt;MediatR.IMediator:5df4&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:e54a&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:4b32&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:9868&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:ce2d&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:f394&gt;)" time="0.0064552" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.GetBook.GetBookCommandHandlerTests" name="HandleOwnerGetBookDetails_IsEditable_ReturnsTrue(bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:4d21&gt;, bookCoverOptions: BookCoverOptions { NoCoverUrl = &quot;NoCoverUrl57edbcd4-4e2c-4759-a423-f1d1239ae78a&quot;, Url = &quot;Urlab37f87f-2078-4466-a8b3-1d1f3709ec98&quot; }, bookCoverOptionsMock: Mock&lt;Microsoft.Extensions.Options.IOptions`1[[Endava.BookSharing.Application.Models.Options.BookCoverOptions, Endava.BookSharing.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:6175&gt;, command: GetBookCommand { AuthenticatedUser = AuthenticatedUser { Id = &quot;idb1eabc11-c0ef-4cd9-aa58-bb52b2213764&quot;, IsAdmin = True, IsAdminOrSuperAdmin = True, IsSuperAdmin = True, Roles = [...] }, BookId = &quot;BookId33bf4760-4894-4ca4-a6e2-1f3486d65424&quot; }, book: BookDetailsDto { Author = AuthorResponse { FullName = &quot;FullNamef5c5014c-c753-4433-87cd-a29d4500c70b&quot;, Id = &quot;Id44e48940-906c-4a87-9065-c075f2e66de4&quot; }, Cover = &quot;Cover7184136a-a122-4a33-ba76-83ba0660d825&quot;, Genres = [Genre { ... }, Genre { ... }, Genre { ... }], IsEditable = True, Language = Language { Id = &quot;Ida59ff66a-4d8e-40e3-ba99-02207b292a02&quot;, Name = &quot;Name4026576d-bfe2-4967-a0ce-18482f79c42f&quot; }, ... }, fixture: [[[...]]])" time="0.0037729" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingGenericExceptionWhenAuthorNameAndIdNotSpecified(mediator: Mock&lt;MediatR.IMediator:29f1&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:4ed4&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:df36&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:adcc&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:d9ea&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:625f&gt;)" time="0.0024430" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenNotFoundAllGenres(mediator: Mock&lt;MediatR.IMediator:2e77&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:7c43&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:7d13&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:d72b&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:9530&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:c350&gt;)" time="0.0044331" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingGenericExceptionWhenFailedToParsePublicationDate(mediator: Mock&lt;MediatR.IMediator:e1d3&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:c249&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:3c8b&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:41c1&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:a308&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:6426&gt;)" time="0.0037057" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenAuthorNotFoundWithId(mediator: Mock&lt;MediatR.IMediator:d9d7&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:fbb3&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:2252&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:9c21&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:c090&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:6da4&gt;)" time="0.0038752" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingGenericExceptionWhenFileInvalid(mediator: Mock&lt;MediatR.IMediator:00ef&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:e786&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:94df&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:b788&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:0503&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:bc99&gt;)" time="0.0033420" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingAccessDeniedExceptionUserNotOwnerAndNotAdmin(mediator: Mock&lt;MediatR.IMediator:550d&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:f2f7&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:5dbb&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:732c&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:cf83&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:fa94&gt;)" time="0.0026664" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingNotFoundExceptionWhenLanguageNotFoundWithId(mediator: Mock&lt;MediatR.IMediator:2dcc&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:b8ff&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:ab22&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:a524&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:2763&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:1c0f&gt;)" time="0.0068021" />
    <testcase classname="Endava.BookSharing.Application.UnitTests.BookManagement.UpdateBook.UpdateBookCommandHandlerTests" name="UpdateBook_Handle_ThrowsBookSharingGenericExceptionWhenFailedToCreateAuthor(mediator: Mock&lt;MediatR.IMediator:6f85&gt;, bookRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IBookRepository:2e3b&gt;, authorRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IAuthorRepository:027b&gt;, genreRepository: Mock&lt;Endava.BookSharing.Application.Abstract.IGenreRepository:66d5&gt;, languageRepository: Mock&lt;Endava.BookSharing.Application.Abstract.ILanguageRepository:929f&gt;, imageValidator: Mock&lt;Endava.BookSharing.Application.Abstract.IImageValidator:e7ca&gt;)" time="0.0047601" />
    <system-out>
Test Framework Informational Messages:
[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.3+1b45f5407b (64-bit .NET 6.0.10)
[xUnit.net 00:00:00.81]   Discovering: Endava.BookSharing.Application.UnitTests
[xUnit.net 00:00:00.89]   Discovered:  Endava.BookSharing.Application.UnitTests
[xUnit.net 00:00:00.89]   Starting:    Endava.BookSharing.Application.UnitTests
[xUnit.net 00:00:01.06]       Assert.DoesNotContain() Failure
[xUnit.net 00:00:01.06]       Found:    Invalid date, please try again with a valid date in the format of MM/DD/YYYY.
[xUnit.net 00:00:01.06]       In value: String[] ["At least Author ID or Author FullName must be spec"..., "At least Author ID or Author FullName must be spec"..., "Invalid date, please try again with a valid date i"..., "At least one genreID must be specifed.", "Language ID must be specifed."]
[xUnit.net 00:00:01.06]       Stack Trace:
[xUnit.net 00:00:01.06]         C:\uni\BD\book-sharing-be-main\tests\Endava.BookSharing.Application.UnitTests\Shared\Extensions\ValidationResultExtensions.cs(32,0): at Endava.BookSharing.Application.UnitTests.Shared.Extensions.ValidationResultExtensions.HasNotErrorMessage(ValidationResult result, String message)
[xUnit.net 00:00:01.06]         C:\uni\BD\book-sharing-be-main\tests\Endava.BookSharing.Application.UnitTests\Models\Validators\CreateBookValidatorTests.cs(29,0): at Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests.CreateBookValidator_WhenGivenAValidDate_Accepts(String date)
[xUnit.net 00:00:01.26]   Finished:    Endava.BookSharing.Application.UnitTests
</system-out>
    <system-err>Error - [xUnit.net 00:00:01.06]     Endava.BookSharing.Application.UnitTests.Models.Validators.CreateBookValidatorTests.CreateBookValidator_WhenGivenAValidDate_Accepts(date: "12.12.2012") [FAIL]
</system-err>
  </testsuite>
</testsuites>